---
title: "YouTube Explorer"
subtitle: "Retrieve all my subscribed channels"
author: "Alessandro Speranza"
date: "31/03/2024"
date-modified: "28/04/2024"
format: html
toc: true
editor: source
---

## Set environment variables (for this R session)

```{r}
google_api_key <- Sys.getenv("GOOGLE_API_KEY")
oauth2_key <- Sys.getenv("OAUTH2_KEY")
oauth2_secret <- Sys.getenv("OAUTH2_SECRET")
```

```{r}
#| include: false

knitr::opts_chunk$set(cash = TRUE,
                      cache.lazy = FALSE,
                      warning = FALSE,
                      message = FALSE,
                      echo = TRUE,
                      dpi = 180,
                      fig.width = 8,
                      fig.height = 5)

library(tidyverse)
library(janitor)
library(jsonlite)
library(httr)
library(here)
library(feather)
```


## get_channel info using YouTube Data API - Real Time Data

```{r}
channel_id <- "UC6CV_32l8omBfcliOOQnIew"

api_call_channel <- str_c("https://www.googleapis.com/youtube/v3/channels?key=",google_api_key,"&id=",channel_id,"&part=snippet,contentDetails,statistics")

api_result_channel <- httr::GET(api_call_channel)

json_result_channel <- httr::content(api_result_channel, "text", encoding="UTF-8")

# Process the raw data into a data frame
json_channel <- jsonlite::fromJSON(json_result_channel, flatten = T)

channel_info <- base::as.data.frame(json_channel) %>% 
  janitor::clean_names()
```

## get_subscribed channels info using YouTube Data API - Real Time Data

```{r}
# api_call_channel <- "https://youtube.googleapis.com/youtube/v3/subscriptions?part=snippet%2CcontentDetails&channelId=UC6CV_32l8omBfcliOOQnIew&key=AIzaSyCviXCt3rQPfDaNvuFIaWCE24gNx7q0Dfs&maxResults=50"

# api_call_channel_videos_fp <- str_c("https://www.googleapis.com/youtube/v3/playlistItems?playlistId=", uploads, "&key=AIzaSyCviXCt3rQPfDaNvuFIaWCE24gNx7q0Dfs&part=snippet&maxResults=50")

api_call_subscribed_channels <- str_c("https://youtube.googleapis.com/youtube/v3/subscriptions?key=",google_api_key,"&channelId=",channel_id,"&part=id,snippet,contentDetails,subscriberSnippet&maxResults=50")

# part=snippet%2CcontentDetails&channelId=UC6CV_32l8omBfcliOOQnIew&key=AIzaSyCviXCt3rQPfDaNvuFIaWCE24gNx7q0Dfs&maxResults=50"

api_result_subscribed_channels <- httr::GET(api_call_subscribed_channels)

json_result_subscribed_channels <- httr::content(api_result_subscribed_channels, "text", encoding="UTF-8")

# Process the raw data into a data frame
json_subscribed_channels <- jsonlite::fromJSON(json_result_subscribed_channels, flatten = T)

subscribed_channels_info <- base::as.data.frame(json_subscribed_channels) %>% 
  janitor::clean_names()
```

```{r}
# Step 1: retrieve the nextPageToken from the first page 
uploads <- subscribed_channels_info |>  
  select(next_page_token) |> 
  dplyr::distinct() |> 
  dplyr::pull()

# uploads key = "CDIQAA"
 
# Step 2: retrieve the uploads key from channel data frame
api_call_channel_videos_fp <- str_c("https://www.googleapis.com/youtube/v3/subscriptions?id=", uploads, "&key=AIzaSyCviXCt3rQPfDaNvuFIaWCE24gNx7q0Dfs&part=snippet&maxResults=50")

api_result_channel_videos_fp <- httr::GET(api_call_channel_videos_fp)

json_result_channel_videos_fp <- httr::content(api_result_channel_videos_fp, "text", encoding="UTF-8")

# Process the raw data into a data frame
json_channel_videos_fp <- jsonlite::fromJSON(json_result_channel_videos_fp, flatten = T)

channel_videos <- as.data.frame(json_channel_videos_fp) %>% 
  janitor::clean_names() 

# Retrieve the first nextPageToken to pass to the function in order to retrieve all the other nextPageToken interactively
nextPageToken <- json_channel_videos_fp[["nextPageToken"]]
```

